'''
https://school.programmers.co.kr/learn/courses/30/lessons/172927

갖고 있는 곡괭이의 개수를 나타내는 정수 배열 picks와 
광물들의 순서를 나타내는 문자열 배열 minerals가 매개변수로 주어질 때, 
작업을 끝내기까지 필요한 최소한의 피로도를 return

picks	minerals	result
[1, 3, 2]	["diamond", "diamond", "diamond", "iron", "iron", "diamond", "iron", "stone"]	12
[0, 1, 1]	["diamond", "diamond", "diamond", "diamond", "diamond", "iron", "iron", "iron", "iron", "iron", "diamond"]	50
'''
def solution(picks, minerals):
    
    def cal_value(pick, dia, iron, stone): #곡괭이 타입, 갯수
        return value_dia[pick]*dia + value_iron[pick]*iron + value_stone[pick]*stone
    
    total = 0
    
    N = len(minerals)//5 if len(minerals) % 5 == 0 else len(minerals)//5 + 1
    
    area = [[0 for _ in range(3)] for _ in range(N)]
    i = 0
    temp = 0
    
    types = {"diamond":0, "iron": 1, "stone":2}
    value_dia = {0:1, 1: 5, 2: 25}
    value_iron = {0:1, 1: 1, 2: 5}
    value_stone = {0:1, 1: 1, 2: 1}
    
    for idx, m in enumerate(minerals):
        area[idx//5][types[m]] += 1
        
    if sum(picks) < N:
        area = area[:sum(picks)]
    
    area.sort()
    
    for i in range(3):
        while area and picks[i]:
            dia, iron, stone = area.pop()
            total += cal_value(i, dia, iron, stone)
            picks[i] -= 1
            
    return total