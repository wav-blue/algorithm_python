'''
처음에 짠 방식처럼
source(시작점)~destination(도착점) 까지 하나하나 구하지 않고
BFS 알고리즘을 통해 미리 distance에 저장하고
값을 추출하여 사용함
'''

def solution(n, roads, sources, destination):
    from collections import deque

    answer = []
    road_map = [[] for _ in range(n+1)]
    chk = [False for _ in range(n+1)]
    chk[destination] = True
    distance = [-1 for _ in range(n+1)]
    
    for road in roads:
        road_map[road[0]].append(road[1])
        road_map[road[1]].append(road[0])
    
    cnt = 0
    q = deque()
    q.append([destination, 0])
    while q:
        now, cnt = q.popleft()
        distance[now] = cnt
        for nxt in road_map[now]:
            if not chk[nxt]:
                q.append([nxt, cnt+1])
                chk[nxt] = True
    for source in sources:
        answer.append(distance[source])
    return answer