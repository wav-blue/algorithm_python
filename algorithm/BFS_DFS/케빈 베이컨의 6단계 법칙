# https://www.acmicpc.net/problem/1389
from collections import deque

N, M = map(int, input().split())

rel = [list() for _ in range(N)]

for i in range(M):
    a, b = map(int, input().split())
    rel[a-1].append(b-1)
    rel[b-1].append(a-1)
    
ans = -1
ans_tot = 987654321
dist = [[0] * N for _ in range(N)]

def bfs(start, goal):
    chk = [False] * N
    dq = deque()
    chk[start] = True
    dq.append((start, 0))
    while dq:
        now, d = dq.popleft()
        
        if now == goal:
            return d

        for nxt in rel[now]:
            if not chk[nxt]:
                chk[nxt] = True
                dq.append((nxt, d + 1))
        
for i in range(N):
    tot = 0
    for j in range(N):
        if i != j:
            if not dist[i][j]:
                dist[i][j] = dist[j][i] = bfs(i, j)

            tot += dist[i][j]

    if ans_tot > tot:
        ans = i
        ans_tot = tot

print(ans + 1)

